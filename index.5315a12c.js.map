{"mappings":"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","sources":["<anon>","src/js/modal.js"],"sourcesContent":["// Отримуємо елементи для модалок\nconst openModalButtons = document.querySelectorAll('.open-modal-btn');\nconst closeModalButtons = document.querySelectorAll('.close-btn');\nconst overlay = document.getElementById('overlay');\n// Отримуємо елементи для бургер-меню\nconst burgerIcon = document.getElementById('burgerIcon');\nconst burgerMenu = document.getElementById('burgerMenu');\nconst closeBurger = document.getElementById('closeBurger');\nconst burgerLogo = document.getElementById('burgerLogo');\n// Функція для відкриття модалки\nfunction openModal(modalId, isBurgerModal = false) {\n    const modal = document.getElementById(modalId);\n    modal.classList.add('show');\n    overlay.classList.add('show');\n    document.body.classList.add('no-scroll');\n    // Якщо модалка відкривається з бургер-меню, накладаємо оверлей поверх бургер-меню\n    if (isBurgerModal) overlay.classList.add('on-top');\n    else overlay.classList.remove('on-top');\n}\n// Функція для закриття модалки\nfunction closeModal(modal, isBurgerModal = false) {\n    modal.classList.remove('show');\n    overlay.classList.remove('show');\n    document.body.classList.remove('no-scroll');\n    // Якщо оверлей був накладений поверх бургер-меню, забираємо клас 'on-top'\n    if (isBurgerModal) overlay.classList.remove('on-top');\n}\n// Функція для закриття бургер-меню\nfunction closeBurgerMenu() {\n    burgerMenu.classList.remove('active');\n    overlay.classList.remove('show');\n    document.body.classList.remove('no-scroll');\n    overlay.classList.remove('on-top'); // Повертаємо оверлей під бургер-меню\n}\n// Додаємо обробник для відкриття модалки\nopenModalButtons.forEach((button)=>{\n    button.addEventListener('click', ()=>{\n        const modalId = button.getAttribute('data-modal-id');\n        // Перевіряємо, чи відкривається модалка з бургер-меню\n        const isBurgerModal = button.closest('.burger-menu') !== null;\n        openModal(modalId, isBurgerModal);\n    });\n});\n// Додаємо обробник для закриття модалки\ncloseModalButtons.forEach((button)=>{\n    button.addEventListener('click', ()=>{\n        const modal = button.closest('.modal');\n        // Перевіряємо, чи потрібно повернути оверлей під бургер-меню\n        const isBurgerModal = modal.closest('.burger-menu') !== null;\n        closeModal(modal, isBurgerModal);\n    });\n});\n// Закриття модалки при кліку на overlay\noverlay.addEventListener('click', ()=>{\n    const openModals = document.querySelectorAll('.modal.show');\n    if (openModals.length > 0) // Якщо є відкриті модалки, закриваємо їх\n    openModals.forEach((modal)=>{\n        // Перевірка, чи це модалка товару\n        if (modal.id === 'product-modal') {\n            const nutritionList = document.getElementById('nutrition-list');\n            const productPict = document.getElementById('product-pict');\n            // Видаляємо класи nutrition-style при натисканні на оверлей\n            productPict.classList.remove('product-pict-style-1', 'product-pict-style-2', 'product-pict-style-3');\n        }\n        // Закриваємо модалку\n        closeModal(modal);\n    });\n    else // Якщо немає відкритих модалок, закриваємо бургер-меню\n    if (burgerMenu.classList.contains('active')) closeBurgerMenu();\n});\n// Обробник для бургер-меню\nburgerIcon.addEventListener('click', ()=>{\n    burgerMenu.classList.add('active');\n    overlay.classList.add('show');\n    document.body.classList.add('no-scroll');\n});\n// Закриття бургер-меню\ncloseBurger.addEventListener('click', closeBurgerMenu);\n// Закриття бургер-меню при натисканні на якірне посилання або логотип\ndocument.querySelectorAll('.burger-menu__link').forEach((anchor)=>{\n    anchor.addEventListener('click', closeBurgerMenu);\n});\nburgerLogo.addEventListener('click', closeBurgerMenu);\n// Оновлене динамічне наповнення модалки товару\nconst products = [\n    {\n        id: 1,\n        name: 'Chocolate icecream',\n        src: '/ice-cream@2x.188e8308.png',\n        alt: 'Ice cream',\n        nutrition: [\n            {\n                name: 'kcal',\n                amount: '320'\n            },\n            {\n                name: 'Prote...',\n                amount: '4g'\n            },\n            {\n                name: 'Fats',\n                amount: '8,2g'\n            },\n            {\n                name: 'Carbs',\n                amount: '40,4g'\n            }\n        ],\n        ingredients: [\n            {\n                name: 'Milk',\n                amount: '100ml'\n            },\n            {\n                name: 'Belgian chocolate',\n                amount: '20g'\n            },\n            {\n                name: 'Cream',\n                amount: '150ml'\n            },\n            {\n                name: 'Cocoa powder',\n                amount: '30g'\n            },\n            {\n                name: 'Sugar',\n                amount: '40g'\n            },\n            {\n                name: 'Vanilla sugar',\n                amount: '10g'\n            }\n        ]\n    },\n    {\n        id: 2,\n        name: 'Caramel Latte',\n        src: '/ice-coffee@2x.1c9b8fe3.png',\n        alt: 'Ice coffee',\n        nutrition: [\n            {\n                name: 'kcal',\n                amount: '280'\n            },\n            {\n                name: 'Prote...',\n                amount: '12g'\n            },\n            {\n                name: 'Fats',\n                amount: '6,5g'\n            },\n            {\n                name: 'Carbs',\n                amount: '25,2g'\n            }\n        ],\n        ingredients: [\n            {\n                name: 'Espresso',\n                amount: '60ml'\n            },\n            {\n                name: 'Ice',\n                amount: '1/4 cup'\n            },\n            {\n                name: 'Cream',\n                amount: '120ml'\n            },\n            {\n                name: 'Caramel syrup',\n                amount: '2 tbsp.'\n            },\n            {\n                name: 'Vanilla sugar',\n                amount: '1/2 tbsp.'\n            }\n        ]\n    },\n    {\n        id: 3,\n        name: 'Banana-chocolate milkshake',\n        src: '/milkshake@2x.3adc4632.png',\n        alt: 'Milkshake',\n        nutrition: [\n            {\n                name: 'kcal',\n                amount: '210'\n            },\n            {\n                name: 'Prote...',\n                amount: '8g'\n            },\n            {\n                name: 'Fats',\n                amount: '5,5g'\n            },\n            {\n                name: 'Carbs',\n                amount: '20,2g'\n            }\n        ],\n        ingredients: [\n            {\n                name: 'Milk',\n                amount: '400ml'\n            },\n            {\n                name: 'Banana',\n                amount: '1 piece'\n            },\n            {\n                name: 'Chocolate ice cream',\n                amount: '80g'\n            },\n            {\n                name: 'Black chocolate',\n                amount: '100g'\n            }\n        ]\n    }\n];\nfunction openProductModal(event) {\n    const button = event.target.closest('.open-product-btn');\n    if (!button) return;\n    const productId = button.getAttribute('data-product-id');\n    if (!productId) return;\n    const product = products.find((p)=>p.id === parseInt(productId));\n    if (!product) {\n        console.error(`Product with id ${productId} not found`);\n        return;\n    }\n    // Оновлення вмісту модалки\n    document.getElementById('product-name').textContent = product.name;\n    document.getElementById('product-image').src = product.src;\n    document.getElementById('product-image').alt = product.alt;\n    // Наповнення списку nutrition\n    const nutritionList = document.getElementById('nutrition-list');\n    nutritionList.innerHTML = product.nutrition.map((n)=>`\n        <li class=\"nutrition__item\">\n          <p class=\"nutrition__amount\">${n.amount}</p>\n          <p class=\"nutrition__name\">${n.name}</p>\n        </li>\n      `).join('');\n    // Наповнення списку ingredients\n    const ingredientsList = document.getElementById('ingredients-list');\n    ingredientsList.innerHTML = product.ingredients.map((i)=>`\n        <li class=\"ingredients__item\">\n          <p class=\"ingredients__name\">${i.name}</p>\n          <p class=\"ingredients__amount\">${i.amount}</p>\n        </li>\n      `).join('');\n    // Додавання різних стилів для nutrition залежно від id товару\n    nutritionList.classList.remove('nutrition-style-1', 'nutrition-style-2', 'nutrition-style-3');\n    if (product.id === 1) nutritionList.classList.add('nutrition-style-1');\n    else if (product.id === 2) nutritionList.classList.add('nutrition-style-2');\n    else if (product.id === 3) nutritionList.classList.add('nutrition-style-3');\n    // Додавання різних стилів для modal-pictures залежно від id товару\n    const productPict = document.getElementById('product-pict');\n    productPict.classList.remove('nutrition-style-1', 'nutrition-style-2', 'nutrition-style-3');\n    if (product.id === 1) productPict.classList.add('product-pict-style-1');\n    else if (product.id === 2) productPict.classList.add('product-pict-style-2');\n    else if (product.id === 3) productPict.classList.add('product-pict-style-3');\n    openModal('product-modal');\n}\n// Функція для закриття модалки товару\nfunction closeProductModal() {\n    // Знаходимо елементи, для яких потрібно видалити класи\n    const nutritionList = document.getElementById('nutrition-list');\n    // Видаляємо класи nutrition-style при закритті модалки\n    nutritionList.classList.remove('nutrition-style-1', 'nutrition-style-2', 'nutrition-style-3');\n    const productPict = document.getElementById('product-pict');\n    productPict.classList.remove('product-pict-style-1', 'product-pict-style-2', 'product-pict-style-3');\n    // Закриваємо модалку\n    closeModal(document.getElementById('product-modal'));\n}\n// Додаємо слухачів подій для кнопок\ndocument.querySelectorAll('.open-product-btn').forEach((button)=>{\n    button.addEventListener('click', openProductModal);\n});\n// Додаємо слухач події для закриття модалки\ndocument.getElementById('closeProductModal').addEventListener('click', closeProductModal);\n// Додано обробник для плавного прокручування до розділів з будь-якого місця\ndocument.querySelectorAll('a[href^=\"#\"]').forEach((anchor)=>{\n    anchor.addEventListener('click', function(event) {\n        event.preventDefault(); // Зупиняємо стандартний перехід\n        const targetId = this.getAttribute('href').substring(1); // Отримуємо id розділу\n        const targetElement = document.getElementById(targetId); // Знаходимо елемент розділу\n        // Перевірка, чи елемент існує на сторінці\n        if (targetElement) {\n            targetElement.scrollIntoView({\n                behavior: 'smooth',\n                block: 'center'\n            });\n            closeBurgerMenu(); // Закриваємо бургер-меню після прокрутки\n        } else console.error('Element not found for ID:', targetId);\n    });\n});\n\n//# sourceMappingURL=index.5315a12c.js.map\n","// Отримуємо елементи для модалок\nconst openModalButtons = document.querySelectorAll('.open-modal-btn');\nconst closeModalButtons = document.querySelectorAll('.close-btn');\nconst overlay = document.getElementById('overlay');\n\n// Отримуємо елементи для бургер-меню\nconst burgerIcon = document.getElementById('burgerIcon');\nconst burgerMenu = document.getElementById('burgerMenu');\nconst closeBurger = document.getElementById('closeBurger');\nconst burgerLogo = document.getElementById('burgerLogo');\n\n// Функція для відкриття модалки\nfunction openModal(modalId, isBurgerModal = false) {\n  const modal = document.getElementById(modalId);\n  modal.classList.add('show');\n  overlay.classList.add('show');\n  document.body.classList.add('no-scroll');\n\n  // Якщо модалка відкривається з бургер-меню, накладаємо оверлей поверх бургер-меню\n  if (isBurgerModal) {\n    overlay.classList.add('on-top');\n  } else {\n    overlay.classList.remove('on-top');\n  }\n}\n\n// Функція для закриття модалки\nfunction closeModal(modal, isBurgerModal = false) {\n  modal.classList.remove('show');\n  overlay.classList.remove('show');\n  document.body.classList.remove('no-scroll');\n\n  // Якщо оверлей був накладений поверх бургер-меню, забираємо клас 'on-top'\n  if (isBurgerModal) {\n    overlay.classList.remove('on-top');\n  }\n}\n\n// Функція для закриття бургер-меню\nfunction closeBurgerMenu() {\n  burgerMenu.classList.remove('active');\n  overlay.classList.remove('show');\n  document.body.classList.remove('no-scroll');\n  overlay.classList.remove('on-top'); // Повертаємо оверлей під бургер-меню\n}\n\n// Додаємо обробник для відкриття модалки\nopenModalButtons.forEach(button => {\n  button.addEventListener('click', () => {\n    const modalId = button.getAttribute('data-modal-id');\n    // Перевіряємо, чи відкривається модалка з бургер-меню\n    const isBurgerModal = button.closest('.burger-menu') !== null;\n    openModal(modalId, isBurgerModal);\n  });\n});\n\n// Додаємо обробник для закриття модалки\ncloseModalButtons.forEach(button => {\n  button.addEventListener('click', () => {\n    const modal = button.closest('.modal');\n    // Перевіряємо, чи потрібно повернути оверлей під бургер-меню\n    const isBurgerModal = modal.closest('.burger-menu') !== null;\n    closeModal(modal, isBurgerModal);\n  });\n});\n\n// Закриття модалки при кліку на overlay\noverlay.addEventListener('click', () => {\n  const openModals = document.querySelectorAll('.modal.show');\n  \n  if (openModals.length > 0) {\n    // Якщо є відкриті модалки, закриваємо їх\n    openModals.forEach(modal => {\n      // Перевірка, чи це модалка товару\n      if (modal.id === 'product-modal') {\n        const nutritionList = document.getElementById('nutrition-list');\n        const productPict = document.getElementById('product-pict');\n\n        // Видаляємо класи nutrition-style при натисканні на оверлей\n        productPict.classList.remove('product-pict-style-1', 'product-pict-style-2', 'product-pict-style-3');\n      }\n\n      // Закриваємо модалку\n      closeModal(modal);\n    });\n  } else {\n    // Якщо немає відкритих модалок, закриваємо бургер-меню\n    if (burgerMenu.classList.contains('active')) {\n      closeBurgerMenu();\n    }\n  }\n});\n\n\n// Обробник для бургер-меню\nburgerIcon.addEventListener('click', () => {\n  burgerMenu.classList.add('active');\n  overlay.classList.add('show');\n  document.body.classList.add('no-scroll');\n});\n\n// Закриття бургер-меню\ncloseBurger.addEventListener('click', closeBurgerMenu);\n\n// Закриття бургер-меню при натисканні на якірне посилання або логотип\ndocument.querySelectorAll('.burger-menu__link').forEach(anchor => {\n  anchor.addEventListener('click', closeBurgerMenu);\n});\n\nburgerLogo.addEventListener('click', closeBurgerMenu);\n\n// Оновлене динамічне наповнення модалки товару\nconst products = [\n  {\n    id: 1,\n    name: 'Chocolate icecream',\n    src: '/ice-cream@2x.188e8308.png',\n    alt: 'Ice cream',\n    nutrition: [\n      { name: 'kcal', amount: '320' },\n      { name: 'Prote...', amount: '4g' },\n      { name: 'Fats', amount: '8,2g' },\n      { name: 'Carbs', amount: '40,4g' },\n    ],\n    ingredients: [\n      { name: 'Milk', amount: '100ml' },\n      { name: 'Belgian chocolate', amount: '20g' },\n      { name: 'Cream', amount: '150ml' },\n      { name: 'Cocoa powder', amount: '30g' },\n      { name: 'Sugar', amount: '40g' },\n      { name: 'Vanilla sugar', amount: '10g' },\n    ],\n  },\n  {\n    id: 2,\n    name: 'Caramel Latte',\n    src: '/ice-coffee@2x.1c9b8fe3.png',\n    alt: 'Ice coffee',\n    nutrition: [\n      { name: 'kcal', amount: '280' },\n      { name: 'Prote...', amount: '12g' },\n      { name: 'Fats', amount: '6,5g' },\n      { name: 'Carbs', amount: '25,2g' },\n    ],\n    ingredients: [\n      { name: 'Espresso', amount: '60ml' },\n      { name: 'Ice', amount: '1/4 cup' },\n      { name: 'Cream', amount: '120ml' },\n      { name: 'Caramel syrup', amount: '2 tbsp.' },\n      { name: 'Vanilla sugar', amount: '1/2 tbsp.' },\n    ],\n  },\n  {\n    id: 3,\n    name: 'Banana-chocolate milkshake',\n    src: '/milkshake@2x.3adc4632.png',\n    alt: 'Milkshake',\n    nutrition: [\n      { name: 'kcal', amount: '210' },\n      { name: 'Prote...', amount: '8g' },\n      { name: 'Fats', amount: '5,5g' },\n      { name: 'Carbs', amount: '20,2g' },\n    ],\n    ingredients: [\n      { name: 'Milk', amount: '400ml' },\n      { name: 'Banana', amount: '1 piece' },\n      { name: 'Chocolate ice cream', amount: '80g' },\n      { name: 'Black chocolate', amount: '100g' },\n    ],\n  },\n];\n\nfunction openProductModal(event) {\n  const button = event.target.closest('.open-product-btn');\n  if (!button) return;\n\n  const productId = button.getAttribute('data-product-id');\n  if (!productId) return;\n\n  const product = products.find(p => p.id === parseInt(productId));\n  if (!product) {\n    console.error(`Product with id ${productId} not found`);\n    return;\n  }\n\n  // Оновлення вмісту модалки\n  document.getElementById('product-name').textContent = product.name;\n  document.getElementById('product-image').src = product.src;\n  document.getElementById('product-image').alt = product.alt;\n\n  // Наповнення списку nutrition\n  const nutritionList = document.getElementById('nutrition-list');\n  nutritionList.innerHTML = product.nutrition\n    .map(\n      n => `\n        <li class=\"nutrition__item\">\n          <p class=\"nutrition__amount\">${n.amount}</p>\n          <p class=\"nutrition__name\">${n.name}</p>\n        </li>\n      `\n    )\n    .join('');\n\n  // Наповнення списку ingredients\n  const ingredientsList = document.getElementById('ingredients-list');\n  ingredientsList.innerHTML = product.ingredients\n    .map(\n      i => `\n        <li class=\"ingredients__item\">\n          <p class=\"ingredients__name\">${i.name}</p>\n          <p class=\"ingredients__amount\">${i.amount}</p>\n        </li>\n      `\n    )\n    .join('');\n\n  // Додавання різних стилів для nutrition залежно від id товару\n  nutritionList.classList.remove('nutrition-style-1', 'nutrition-style-2', 'nutrition-style-3');\n\n  if (product.id === 1) {\n    nutritionList.classList.add('nutrition-style-1');\n  } else if (product.id === 2) {\n    nutritionList.classList.add('nutrition-style-2');\n  } else if (product.id === 3) {\n    nutritionList.classList.add('nutrition-style-3');\n  }\n\n  // Додавання різних стилів для modal-pictures залежно від id товару\n  const productPict = document.getElementById('product-pict');\n  productPict.classList.remove('nutrition-style-1', 'nutrition-style-2', 'nutrition-style-3');\n\n  if (product.id === 1) {\n    productPict.classList.add('product-pict-style-1');\n  } else if (product.id === 2) {\n    productPict.classList.add('product-pict-style-2');\n  } else if (product.id === 3) {\n    productPict.classList.add('product-pict-style-3');\n  }\n\n  openModal('product-modal');\n}\n\n// Функція для закриття модалки товару\nfunction closeProductModal() {\n  // Знаходимо елементи, для яких потрібно видалити класи\n  const nutritionList = document.getElementById('nutrition-list');\n\n  // Видаляємо класи nutrition-style при закритті модалки\n  nutritionList.classList.remove('nutrition-style-1', 'nutrition-style-2', 'nutrition-style-3');\n\n  const productPict = document.getElementById('product-pict');\n  productPict.classList.remove('product-pict-style-1', 'product-pict-style-2', 'product-pict-style-3');\n  // Закриваємо модалку\n  closeModal(document.getElementById('product-modal'));\n}\n\n// Додаємо слухачів подій для кнопок\ndocument.querySelectorAll('.open-product-btn').forEach(button => {\n  button.addEventListener('click', openProductModal);\n});\n\n// Додаємо слухач події для закриття модалки\ndocument.getElementById('closeProductModal').addEventListener('click', closeProductModal);\n\n// Додано обробник для плавного прокручування до розділів з будь-якого місця\ndocument.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\n  anchor.addEventListener('click', function (event) {\n    event.preventDefault(); // Зупиняємо стандартний перехід\n\n    const targetId = this.getAttribute('href').substring(1); // Отримуємо id розділу\n    const targetElement = document.getElementById(targetId); // Знаходимо елемент розділу\n\n    // Перевірка, чи елемент існує на сторінці\n    if (targetElement) {\n      targetElement.scrollIntoView({\n        behavior: 'smooth', // Плавна прокрутка\n        block: 'center', // Прокручувати елемент до центру\n      });\n\n      closeBurgerMenu(); // Закриваємо бургер-меню після прокрутки\n    } else {\n      console.error('Element not found for ID:', targetId);\n    }\n  });\n});"],"names":["openModalButtons","document","querySelectorAll","closeModalButtons","overlay","getElementById","burgerIcon","burgerMenu","closeBurger","burgerLogo","openModal","modalId","isBurgerModal","modal","classList","add","body","remove","closeModal","closeBurgerMenu","forEach","button","addEventListener","getAttribute","closest","openModals","length","id","productPict","contains","anchor","products","name","src","alt","nutrition","amount","ingredients","openProductModal","event","target","productId","product","find","p","parseInt","console","error","textContent","nutritionList","innerHTML","map","n","join","ingredientsList","i","preventDefault","targetId","substring","targetElement","scrollIntoView","behavior","block"],"version":3,"file":"index.5315a12c.js.map"}